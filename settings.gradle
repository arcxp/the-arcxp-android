pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

def localProperties = new Properties()
if (file("local.properties").exists()) {
    file("local.properties").withInputStream {
        localProperties.load(it)
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()

        // Define common credentials for GitHub repositories (needs read packages permission for PAT)
        def githubCredentials = {
            username = System.getenv('GITHUB_USER')
                    ?: providers.gradleProperty('GITHUB_USER').get()
                    ?: localProperties.getProperty("GITHUB_USER")
                    ?: ""
            password = System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN')
                    ?: providers.gradleProperty('GITHUB_PERSONAL_ACCESS_TOKEN').get()
                    ?: localProperties.getProperty("GITHUB_PERSONAL_ACCESS_TOKEN")
                    ?: ""
        }

        // for sdk dependencies from local directory
        maven {
            url "${rootDir}/arcxp-libs/"
        }

        maven {
            credentials(githubCredentials)
            url 'https://maven.pkg.github.com/arcxp/arcxp-sdk-android-omid/'
        }

        // for sdk dependencies from maven
        maven {
            credentials(githubCredentials)
            url 'https://maven.pkg.github.com/arcxp/arcxp-sdk-android'
        }


    }
}
rootProject.name = "TheArcXP"
include ':app'

//client implementation can ignore the following, for internal use only:
try {
    include ':arcxp-mobile-sdk-android'
} catch (Exception ignored) {
    //safe to ignore in default arcPartnersDebug flavor
    //submodules are only for internal use only
}
