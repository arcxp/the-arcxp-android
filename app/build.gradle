plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

def getLocalProperties() {
    def localProperties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
    }
    return localProperties
}



android {
    compileSdk 33

    defaultConfig {
        applicationId "com.arcxp.thearcxp"
        minSdk 23
        targetSdk 33
        versionCode 5
        versionName project.property("app_version")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "facebook_app_id", System.getenv("facebook_app_id") ?: localProperties['facebook_app_id'] ?: ""
        resValue "string", "fb_login_protocol_scheme", System.getenv("fb_login_protocol_scheme") ?: localProperties['fb_login_protocol_scheme'] ?: ""
        resValue "string", "facebook_client_token", System.getenv("facebook_client_token") ?: localProperties['facebook_client_token'] ?: ""
        resValue "string", "resizer_key", System.getenv("resizer_key") ?: localProperties['resizer_key'] ?: ""
    }

    signingConfigs {
        debug {
            if (rootProject.file("commerce.keystore").exists()) {
                storeFile file(System.getenv('HOME') + '/keystores/commerce.keystore') ?: rootProject.file("commerce.keystore")
                keyAlias System.getenv("keyAlias") ?: localProperties['keyAlias']
                keyPassword System.getenv("keyPassword") ?: localProperties['keyPassword']
                storePassword System.getenv("storePassword") ?: localProperties['storePassword']
            }
        }
        release {
            storeFile file(System.getenv('HOME') + '/keystores/commerce.keystore') ?: rootProject.file("commerce.keystore")
            keyAlias System.getenv("keyAlias") ?: localProperties['keyAlias']
            keyPassword System.getenv("keyPassword") ?: localProperties['keyPassword']
            storePassword System.getenv("storePassword") ?: localProperties['storePassword']
        }
    }

    buildTypes {

        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "App: $app_version$versionNameSuffix"
            resValue "string", "google_key", localProperties['debug_google_key'] ?: ""
            signingConfig signingConfigs.debug
        }
        release {
            resValue "string", "app_version", "App: $app_version"
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "google_key", System.getenv("google_key") ?: localProperties['google_key'] ?: ""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    //client implementation can safely ignore this section, for internal testing/development only
    flavorDimensions "version"
    productFlavors {
        arcPartners {}
        arcXPInternal {}
    }
}


dependencies {


    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.viewpager2:viewpager2:1.0.0"


    //Facebook
    implementation 'com.facebook.android:facebook-login:8.2.0'
    implementation 'com.facebook.android:facebook-android-sdk:12.3.0'
    //Google
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.1'
    implementation 'com.google.android.gms:play-services-basement:17.6.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //include sdks
    //for client implementations, just use 'implementation ..' instead of creating/using arcPartnersImplementation flavor
    arcPartnersImplementation 'arcxp-sdk-android:arcxp-content-sdk-android:1.0.3'
    arcPartnersImplementation 'arcxp-sdk-android:arcxp-commerce-sdk-android:1.0.3'
    arcPartnersImplementation 'arcxp-sdk-android:arcxp-video-sdk-android:1.6.1'

    //internal use only!
    arcXPInternalImplementation project(":arcxp-content-sdk-android")
    arcXPInternalImplementation project(":arcxp-commerce-sdk-android")
    arcXPInternalImplementation project(":arcxp-video-sdk-android")


    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'

    implementation 'com.facebook.android:facebook-login:8.2.0'

    implementation "com.google.android.exoplayer:exoplayer-ui:2.17.1"

    implementation 'com.squareup:pollexor:3.0.0'

    //test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
}
