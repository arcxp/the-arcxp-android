plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

if (isGoogleServicesJsonPresent()) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

def getLocalProperties() {
    def localProperties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
    }
    return localProperties
}


android {
    compileSdk 33

    defaultConfig {
        applicationId "com.arcxp.thearcxp"
        minSdk 22
        targetSdk 33
        versionCode 5
        versionName project.property("app_version")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "facebook_app_id", System.getenv("facebook_app_id") ?: localProperties['facebook_app_id'] ?: ""
        resValue "string", "fb_login_protocol_scheme", System.getenv("fb_login_protocol_scheme") ?: localProperties['fb_login_protocol_scheme'] ?: ""
        resValue "string", "facebook_client_token", System.getenv("facebook_client_token") ?: localProperties['facebook_client_token'] ?: ""
        resValue "string", "resizer_key", System.getenv("resizer_key") ?: localProperties['resizer_key'] ?: ""
        resValue "string", "admob_app_id", System.getenv("admob_app_id") ?: localProperties['admob_app_id'] ?: ""
        resValue "string", "admob_banner_id", System.getenv("admob_banner_id") ?: localProperties['admob_banner_id'] ?: ""
        resValue "string", "admob_native_id", System.getenv("admob_native_id") ?: localProperties['admob_native_id'] ?: ""
        if (isGoogleServicesJsonPresent()) {
            buildConfigField "boolean", "HAS_GOOGLE_SERVICES", "true"
        } else {
            buildConfigField "boolean", "HAS_GOOGLE_SERVICES", "false"
        }
    }

    signingConfigs {
        debug {
            if (rootProject.file("commerce.keystore").exists()) {
                storeFile file(System.getenv('HOME') + '/keystores/commerce.keystore') ?: rootProject.file("commerce.keystore")
                keyAlias System.getenv("keyAlias") ?: localProperties['keyAlias']
                keyPassword System.getenv("keyPassword") ?: localProperties['keyPassword']
                storePassword System.getenv("storePassword") ?: localProperties['storePassword']
            }
        }
        release {
            storeFile file(System.getenv('HOME') + '/keystores/commerce.keystore') ?: rootProject.file("commerce.keystore")
            keyAlias System.getenv("keyAlias") ?: localProperties['keyAlias']
            keyPassword System.getenv("keyPassword") ?: localProperties['keyPassword']
            storePassword System.getenv("storePassword") ?: localProperties['storePassword']
        }
    }

    buildTypes {

        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "App: $app_version$versionNameSuffix"
            resValue "string", "google_key", localProperties['debug_google_key'] ?: ""
            signingConfig signingConfigs.debug
        }
        release {
            resValue "string", "app_version", "App: $app_version"
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "google_key", System.getenv("google_key") ?: localProperties['google_key'] ?: ""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.7"
    }

    //client implementation can safely ignore this section, for internal testing/development only
    flavorDimensions "version"
    productFlavors {
        arcPartners {}
        arcXPInternal {}
    }
}


dependencies {

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'

    implementation "androidx.compose.ui:ui:1.4.3"
    implementation "androidx.compose.foundation:foundation:1.4.3"
    implementation "androidx.compose.runtime:runtime-livedata:1.4.3"

    //Facebook
    implementation 'com.facebook.android:facebook-login:12.3.0'
    implementation 'com.facebook.android:facebook-android-sdk:12.3.0'
    //Google
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
    implementation 'com.google.android.gms:play-services-basement:18.2.0'
    implementation 'com.google.android.gms:play-services-cloud-messaging:17.0.2'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'com.google.android.gms:play-services-ads-lite:22.1.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.google.android.gms:play-services-ads:22.1.0'
    //gdpr consent library for admob
    implementation 'com.google.android.ump:user-messaging-platform:2.0.0'

    //include sdks
    //for client implementations, just use 'implementation ..' instead of creating/using arcPartnersImplementation flavor
    arcPartnersImplementation 'arcxp-sdk-android:arcxp-mobile-sdk-android:1.1.0'

    //internal use only!
    arcXPInternalImplementation project(":arcxp-mobile-sdk-android")

    implementation 'androidx.fragment:fragment-ktx:1.6.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
    def composeBom = platform('androidx.compose:compose-bom:2023.06.01')
    implementation composeBom
    androidTestImplementation composeBom

    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'androidx.compose.material:material-icons-core'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.material3:material3-window-size-class'

    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.compose.runtime:runtime-livedata'

    implementation 'androidx.compose.ui:ui-viewbinding'

    implementation 'androidx.compose.material3:material3'

    implementation "androidx.navigation:navigation-compose:2.6.0"
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.0-beta02'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"
    implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.1'

    implementation "com.google.accompanist:accompanist-pager:0.31.5-beta"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.31.5-beta"

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:32.5.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    //test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk-android:1.13.8"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

def isGoogleServicesJsonPresent() {
    return file("google-services.json").exists()
}